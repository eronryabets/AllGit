#Вопросы
def printTwice(bruce):
  print(bruce, bruce)
 printTwice(bruce)

 что это за (bruce) ? в верху функции
#================================
def catTwice(part1, part2):
  cat = part1 + part2
  printTwice(cat)

#========================

def add(x, y):
    return x + y

print(add(1, 20))

#=============================

def func(*args):
    return args

#Функция также может принимать переменное количество позиционных аргументов, тогда перед именем ставится *:
# Не поенял, что делает *args

#==========================

#lambda функции, в отличие от обычной, не требуется инструкция return, а в остальном, ведет себя точно так же:

func = lambda *args: args
func(1, 2, 3, 4)
(1, 2, 3, 4)

#==========================

Операции на месте (in-Place)

x=2
x+=3
print(x) #5

#смысл такой записи не понятен? чем такой не угодил x = 2 + 3 = 5????

#==========================


#pass keyword Используется в случае, когда нужно объявить тело пустого блока

def foo():
    # The empty body of function
    pass

#=================================
pydoc time нельзя вызвать, над в линухе проверить
help('time')

#=================================

os.uname() - информация об ОС. возвращает объект с атрибутами:
sysname - имя операционной системы, nodename - имя машины в сети
(определяется реализацией), release - релиз, version - версия, machine - идентификатор машины.
===========================================================
